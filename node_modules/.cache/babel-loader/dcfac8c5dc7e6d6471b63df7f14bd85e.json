{"ast":null,"code":"var _jsxFileName = \"/Users/jiseong/Desktop/react-study/src/IterationSample.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IterationSample = () => {\n  //     const [names, setNames] = useState([\n  //         {id: 1, text: '눈사람'}, \n  //         {id: 2, text: '얼음'}, \n  //         {id: 3, text: '눈'}, \n  //         {id: 4, text: '바람'}\n  //     ]);\n  //     const [inputText, setInputText] = useState('');\n  //     const [nextId, setNextId] = useState(5); // ->새 항목\n  //     const onChange = e=> setInputText(e.target.value);\n  //     const onClick = ()=>{\n  //         const nextNames = names.concat({\n  //             id: nextId, text:inputText\n  //         });\n  //         setNextId(nextId + 1);\n  //         setNames(nextNames);\n  //         setInputText('');\n  //     }\n  //     const namesList = names.map(name => <li key={name.id}>{name.text}</li>);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputText,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: namesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c = IterationSample;\nexport default IterationSample;\n\nvar _c;\n\n$RefreshReg$(_c, \"IterationSample\");","map":{"version":3,"names":["useState","IterationSample","inputText","onChange","onClick","namesList"],"sources":["/Users/jiseong/Desktop/react-study/src/IterationSample.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst IterationSample = () => {\n//     const [names, setNames] = useState([\n//         {id: 1, text: '눈사람'}, \n//         {id: 2, text: '얼음'}, \n//         {id: 3, text: '눈'}, \n//         {id: 4, text: '바람'}\n//     ]);\n//     const [inputText, setInputText] = useState('');\n//     const [nextId, setNextId] = useState(5); // ->새 항목\n\n//     const onChange = e=> setInputText(e.target.value);\n//     const onClick = ()=>{\n//         const nextNames = names.concat({\n//             id: nextId, text:inputText\n//         });\n//         setNextId(nextId + 1);\n//         setNames(nextNames);\n//         setInputText('');\n//     }\n\n//     const namesList = names.map(name => <li key={name.id}>{name.text}</li>);\n    return <>\n        <input value={inputText} onChange={onChange}/>\n        <button onClick={onClick}>추가</button>\n        <ul>{namesList}</ul>\n    </>\n}\n\nexport default IterationSample;"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;EAC9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACI,oBAAO;IAAA,wBACH;MAAO,KAAK,EAAEC,SAAd;MAAyB,QAAQ,EAAEC;IAAnC;MAAA;MAAA;MAAA;IAAA,QADG,eAEH;MAAQ,OAAO,EAAEC,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFG,eAGH;MAAA,UAAKC;IAAL;MAAA;MAAA;MAAA;IAAA,QAHG;EAAA,gBAAP;AAKH,CA1BD;;KAAMJ,e;AA4BN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}